<project name="jsr352.tck" default="mainTckBuild" basedir="../">

	<dirname property="jsr352.tck.basedir" file="${ant.file.jsr352.tck}"/>
	<property file="${imported.basedir}/imported.properties"/>
	<property name="workspace.home.dir" value="${jsr352.tck.basedir}/../.."/>

	<taskdef resource="testngtasks" classpath="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/testng/testng-6.8.jar"/>

	<!-- NOTE: Set this to an Oracle jre prior to running the task to generate the sigtest signature file -->
	<property name="sigtest.java.home" value=""/>
	
	<path id="build.classpath">
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies.WeDoNotShip/lib/j2ee.jar"/>
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/testng/testng-6.8.jar"/>
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/derby/lib/derby.jar"/>		
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/derby/lib/derbyclient.jar"/>	
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/junit/junit-4.10.jar"/>
		<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/xmlunit/xmlunit-1.1.jar"/>
		<pathelement location="${workspace.home.dir}/JSR352.TCK.SPI/bin"/>	
		<pathelement location="${workspace.home.dir}/JSR352.Annotations/bin"/>
		<pathelement location="${workspace.home.dir}/JSR352.Runtime/target/classes"/>
		<pathelement location="${workspace.home.dir}/JSR352.RI.SPI/bin"/>
		<pathelement location="${workspace.home.dir}/JSR352.API/bin"/>
		<pathelement location="${workspace.home.dir}/JSR352.JobXML.Model/bin"/>
		<pathelement location="${jsr352.tck.basedir}/../bin"/>
		<pathelement location="${jsr352.tck.basedir}/../testArtifactsBin"/>
	</path>

	<taskdef name="setup"  classname="com.sun.tdk.signaturetest.ant.ASetup"  classpath="${workspace.home.dir}/JSR352.BinaryDependencies.WeDoNotShip/lib/sigtestdev.jar"/>

	<target name="cleanTCK">
		<delete dir="${jsr352.tck.basedir}/../testArtifactsBin"/>
		<delete dir="${jsr352.tck.basedir}/../bin"/>
		<delete dir="${jsr352.tck.basedir}/../tckZip"/>
		<delete dir="${jsr352.tck.basedir}/../dist"/>
	</target>

	<target name="compileTCK">
		<mkdir dir="${jsr352.tck.basedir}/../testArtifactsBin"/>
		<mkdir dir="${jsr352.tck.basedir}/../bin"/>

		<!-- compile test artifacts -->
		<javac  debug="true" debuglevel="lines,vars,source" srcdir="${jsr352.tck.basedir}/../testArtifacts" destdir="${jsr352.tck.basedir}/../testArtifactsBin">
			<classpath refid="build.classpath"/>
		</javac>

		<!-- compile tests and utils -->
		<javac debug="true" debuglevel="lines,vars,source" srcdir="${jsr352.tck.basedir}/../src" destdir="${jsr352.tck.basedir}/../bin">
			<classpath refid="build.classpath"/>
		</javac>

		<copy todir="${jsr352.tck.basedir}/../testArtifactsBin/META-INF">
			<fileset dir="${jsr352.tck.basedir}/../META-INF"/>
		</copy>

	</target>

	<target name="buildTCKZip" depends="mainTckBuild">
		<mkdir dir="${jsr352.tck.basedir}/../tckZip"/>
		<mkdir dir="${jsr352.tck.basedir}/../tckZip/doc"/>
		<mkdir dir="${jsr352.tck.basedir}/../tckZip/lib"/>
		<mkdir dir="${jsr352.tck.basedir}/../dist"/>
		<jar destfile="${jsr352.tck.basedir}/../tckZip/artifacts/jsr352-tck-impl-src.jar">
			<fileset dir="${jsr352.tck.basedir}/../src"/>
			<fileset dir="${jsr352.tck.basedir}/../testArtifacts"/>
		</jar>
		<jar destfile="${jsr352.tck.basedir}/../tckZip/artifacts/jsr352-tck-impl.jar">
			<fileset dir="${jsr352.tck.basedir}/../testArtifactsBin"
				includes="**/*.class"/>
			<fileset dir="${jsr352.tck.basedir}/../testArtifactsBin"
							includes="**/*.xml"/>
			<fileset dir="${jsr352.tck.basedir}/../testJobXml"/>
			<fileset dir="${jsr352.tck.basedir}/../bin"/>
		</jar>
		<jar destfile="${jsr352.tck.basedir}/../tckZip/artifacts/jsr352-tck-SPI-src.jar">
			<fileset dir="${workspace.home.dir}/JSR352.TCK.SPI/src"/>
		</jar>
		<jar destfile="${jsr352.tck.basedir}/../tckZip/artifacts/jsr352-tck-SPI.jar">
			<fileset dir="${workspace.home.dir}/JSR352.TCK.SPI/bin"/>
		</jar>
		<copy file="${jsr352.tck.basedir}/../doc/jsr352-tck-reference-guide.pdf" todir="${jsr352.tck.basedir}/../tckZip/doc"/>
		<copy file="${workspace.home.dir}/Legal.and.Release.Utils/externalFiles/LICENSE.txt" todir="${jsr352.tck.basedir}/../tckZip"/>
		<copy file="${workspace.home.dir}/Legal.and.Release.Utils/externalFiles/NOTICE.txt" todir="${jsr352.tck.basedir}/../tckZip"/>
		<copy file="${jsr352.tck.basedir}/../build.xml" todir="${jsr352.tck.basedir}/../tckZip"/>
		<copy file="${jsr352.tck.basedir}/../readme.txt" todir="${jsr352.tck.basedir}/../tckZip"/>
		<copy file="${jsr352.tck.basedir}/../jsr352-tck.properties" todir="${jsr352.tck.basedir}/../tckZip"/>
		<copy file="${jsr352.tck.basedir}/../jsr352-tck-impl-SE-suite.xml" tofile="${jsr352.tck.basedir}/../tckZip/artifacts/jsr352-tck-impl-suite.xml"/>
		
		<copy file="${jsr352.tck.basedir}/../jsr352-api-sigtest.sig" todir="${jsr352.tck.basedir}/../tckZip/artifacts"/>
		<copy file="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/testng/testng-6.8.jar" todir="${jsr352.tck.basedir}/../tckZip/lib"/>
		<copy file="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/xmlunit/xmlunit-1.1.jar" todir="${jsr352.tck.basedir}/../tckZip/lib"/>
		<copy file="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/atinject/javax.inject.jar" todir="${jsr352.tck.basedir}/../tckZip/lib"/>
		<copy file="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/junit/junit-4.10.jar" todir="${jsr352.tck.basedir}/../tckZip/lib"/>
		<zip destfile="${jsr352.tck.basedir}/../dist/jsr352-tck.zip" basedir="${jsr352.tck.basedir}/../tckZip"/>
	</target>

	<!-- Generate sig file -->
	<target name="generateSigFile">
		<setup failonerror="true" filename="${jsr352.tck.basedir}/../jsr352-api-sigtest.sig"
				package="javax.batch">
			<classpath>
				<pathelement location="${sigtest.java.home}/lib/rt.jar"/>
				<pathelement location="${workspace.home.dir}/JSR352.BinaryDependencies/shipped/atinject/javax.inject.jar"/>
				<pathelement location="${workspace.home.dir}/JSR352.JEE.CDI.Integration/outputBin/plugins/JSR352.API.Combined.jar"/>
			</classpath>
		</setup>
	</target>

	<target name="run-batch-xml-generator">
		<echo message="building ${jsr352.tck.basedir}/../testArtifactsBin/META-INF/build.xml"/>
		<java classname="com.ibm.jbatch.tck.utils.BatchXMLGenerator">
			<arg value="${jsr352.tck.basedir}/../testArtifactsBin"/>
			<arg value="${jsr352.tck.basedir}/../testArtifactsBin/META-INF"/>
			<classpath refid="build.classpath"/>
		</java>
	</target>

	<target name="run-test-class" >

		<echo>${workspace.home.dir}/../jsr352db</echo>
		<condition property="classNameSpecified">
	      <isset property="class.name" />
	    </condition>
	    <fail unless="classNameSpecified" message="class.name property not specified. Don't know which test class to run."/>
	    <copy todir="${java.io.tmpdir}" file="${jsr352.tck.basedir}/testng-class.xml" overwrite="true">
	      	<filterset>
	        	<filter token="CLASS" value="${class.name}"/>
	      	</filterset>
	   	</copy>

		<testng mode="testng" outputdir="${jsr352.tck.basedir}/test-output" classpathref="build.classpath" verbose="2">
			<!-- <classfileset dir="${jsr352.tck.basedir}/../bin" includes="**/*.class" /> -->
			<xmlfileset dir="${java.io.tmpdir}" includes="testng-class.xml" />
			<jvmarg value="-Djava.util.logging.config.file=${jsr352.tck.basedir}/../logging.properties"/>
			<jvmarg value="-Djunit.jobOperator.sleep.time=5000"/>
			<jvmarg value="-Dderby.system.home=${dbhome}"/>
		</testng>
	</target>

	<target name="run-test-method" >
		<echo message="${dbhome}"/>
		<condition property="propsSpecified">
			<and>
		      <isset property="class.name" />
		      <isset property="test.name" />
			</and>
	    </condition>
   		<fail unless="propsSpecified" message="class.name and/or test.name property not specified."/>
	    <copy todir="${java.io.tmpdir}" file="${jsr352.tck.basedir}/testng-method.xml" overwrite="true">
	      	<filterset>
	        	<filter token="CLASS" value="${class.name}"/>
	        	<filter token="TEST" value="${test.name}"/>
	      	</filterset>
	   	</copy>

		<testng mode="testng" outputdir="${jsr352.tck.basedir}/test-output" classpathref="build.classpath" verbose="2">
			<!-- <classfileset dir="${jsr352.tck.basedir}/../bin" includes="**/*.class" /> -->
			<xmlfileset dir="${java.io.tmpdir}" includes="testng-method.xml" />
			<jvmarg value="-Djava.util.logging.config.file=${jsr352.tck.basedir}/../logging.properties"/>
			<jvmarg value="-Djunit.jobOperator.sleep.time=5000"/>
			<jvmarg value="-Dderby.system.home=${dbhome}"/>
		</testng>
	</target>
	
	<target name="copy-batch-jobs">
		<copy todir="${jsr352.tck.basedir}/../testArtifactsBin/">
			<fileset dir="${jsr352.tck.basedir}/../testJobXml/"/>
		</copy>
	</target>

	<target name="mainTckBuild" depends="cleanTCK, compileTCK, run-batch-xml-generator, copy-batch-jobs"/>
</project>
