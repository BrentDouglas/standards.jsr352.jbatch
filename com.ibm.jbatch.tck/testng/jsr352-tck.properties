#
# Edit this property to contain a classpath listing of the directories and jars for the SE JSR 352 runtime implementation (that you're running the TCK against)
# For example: batch.impl.classes=$HOME/foo/lib/classes:$HOME/foo/lib/foo.jar:$HOME/foo/lib/batch-api.jar
#
# Another example, for the RI root dir in the same parent directory as the TCK root dir, one could use:
#batch.impl.classes=../jsr352-ri-1.0/javax.batch.api.jar:../jsr352-ri-1.0/jsr352-SE-RI-runtime.jar:../jsr352-ri-1.0/jsr352-RI-spi.jar:../jsr352-ri-1.0/derby.jar
batch.impl.classes=

# Add JVM options to pass to TestNG here.  JVM arguments should be separated by spaces, as this will provided to the TestNG invocation
# using the <jvmarg line=""/> function
jvm.options=

#
# Sigtest Options
#

#
# The location of the jar containing the JSR-352 API classes.
# If this property is not set and ant is invoked with any of the
# targets `sigtest6`, `sigtest7` or `sigtest8` the build will fail.
#
#javax.batch.jar=

#
# This property must be set to point to the root of a JDK6 install if
# SigTest is to be run against the file `jsr352-api-sigtest-java6.sig`.
# To run SigTest in this configuration invoke the ant target
# `sigtest6`. If this property is not set and the ant target `sigtest6`
# is invoked the build will fail.
#
#sigtest.java6.home=

#
# This property must be set to point to the root of a JDK7 install if
# SigTest is to be run against the file `jsr352-api-sigtest-java7.sig`.
# To run SigTest in this configuration invoke the ant target
# `sigtest7`. If this property is not set and the ant target `sigtest7`
# is invoked the build will fail.
#
#sigtest.java7.home=

#
# This property must be set to point to the root of a JDK8 install if
# SigTest is to be run against the file `jsr352-api-sigtest-java8.sig`.
# To run SigTest in this configuration invoke the ant target
# `sigtest8`. If this property is not set and the ant target `sigtest8`
# is invoked the build will fail.
#
#sigtest.java8.home=

######################################
# Sleep timer values for TCK tests
######################################

# Test Class: ExecutionTests
ExecutionTests.testInvokeJobWithUserStop.sleep=1000

# Test Class: JobOperatorTests
JobOperatorTests.testInvokeJobWithUserStop.sleep=1000
JobOperatorTests.testJobOperatorGetRunningJobExecutions.sleep=1000
JobOperatorTests.testJobOperatorGetRunningJobExecutions.app.timeinterval=10000
JobOperatorTests.testJobOperatorGetRunningJobInstancesException.app.timeinterval=10000
JobOperatorTests.testJobOperatorTestAbandonActiveRestart.sleep=5000
JobOperatorTests.testJobOperatorTestRestartAlreadAbandonedJob.sleep=1


#Test Class: ParallelExecutionTests
ParallelExecutionTests.testStopRunningPartitionedStep.sleep=1900
ParallelExecutionTests.testStopRestartRunningPartitionedStep.sleep=1900
ParallelExecutionTests.testInvokeJobWithOnePartitionedStepExitStatus.sleep=2000

#Test Class: StopOrFailOnExitStatusWithRestartTests
StopOrFailOnExitStatusWithRestartTests.testInvokeJobWithUserStop.sleep=500

#Test Class: TransactionTests
TransactionTests.testGlobalTranNoExceptions.sleep=0
TransactionTests.testGlobalTranForcedExceptionWithRollback.sleep=0
TransactionTests.testGlobalTranForcedExceptionCheckpointRestart.sleep=0
TransactionTests.testGlobalTranNoDelayLongTimeout.sleep=0
TransactionTests.testGlobalTranLongDelayShortTimeoutThenNoDelayShortTimeout.sleep.1=10000
TransactionTests.testGlobalTranLongDelayShortTimeoutThenNoDelayShortTimeout.sleep.2=0
TransactionTests.testGlobalTranLongDelayMixOfLongTimeoutStepsAndShortTimeoutSteps.sleep=10000
TransactionTests.testGlobalTranLongDelayMixOfLongTimeoutStepsAndShortTimeoutStepsCustomCheckpointAlgorithm.sleep=10000
TransactionTests.testGlobalTranForcedTimeoutCheckpointRestart.sleep.1=10000
TransactionTests.testGlobalTranForcedTimeoutCheckpointRestart.sleep.2=0

#Test Class: ChunkTests
ChunkTests.testChunkTimeBased10Seconds.sleep=500
ChunkTests.testChunkRestartTimeBasedCheckpoint.sleep=500
ChunkTests.testChunkTimeBasedTimeLimit0.sleep=500
ChunkTests.testChunkRestartTimeBasedDefaultCheckpoint.sleep=500